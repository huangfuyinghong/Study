<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.web.shopping.PqnaMapper">

<!-- 컬럼이름 : mybatis-config.xml의 name
	${컬럼이름} : DB 테이블의 열
	#{컬럼이름} : 입력받은 데이터 -->
	
	<!-- DB 쿼리 작성 -->
	<!-- id : dao의 메소드와 연결하기 위해 사용 -->
	
	<!-- resultType : select를 했을때 리턴하는 레코드 타입 선언
	- 일반적으로 패키지 이름을 포함한 전체경로의 클래스 이름을 사용해야함
	- mybatis-config.xml에서 typeAliases 속성을 package로 정의하여 클래스 이름만 사용 -->
	
	<select id="select_all" resultType="PqnaVO">
		select * from ${pqna}
		order by ${pqID} desc
	</select>
	
	<select id="select_by_pqID" resultType="PqnaVO">
		select * from ${pqna}
		where ${pqID} = #{pqID}
	</select>
	
	<insert id="insert">
		insert into ${pqna} (${pqCATE}, ${pqWRITER}, ${pqPW}, ${pqTITLE}, ${pqCONTENT}, ${pqFILE}, ${pqSECRET}, ${pID})
		values (#{pqCATE}, #{pqWRITER}, #{pqPW}, #{pqTITLE}, #{pqCONTENT}, #{pqFILE}, #{pqSECRET}, #{pID})
	</insert>
	
	<update id="update">
		update ${pqna}
		set ${pqTITLE} = #{pqTITLE}, ${pqCONTENT} = #{pqCONTENT}, ${pqFILE} = #{pqFILE}
		where ${pqID} = #{pqID}
	</update>
	
	<delete id="delete">
		delete from ${pqna}
		where ${pqID} = #{pqID}
	</delete>

	<select id="total_count" resultType="Integer">
		select count(*) total_cnt from ${pqna}
	</select>

	<select id="paging" resultType="PqnaVO">
		select
		b.${pqID}, b.${pqCATE}, b.${pqWRITER}, b.${pqPW}, b.${pqTITLE}, b.${pqCONTENT}, b.${pqFILE}, b.${pqCDATE}, b.${pqSECRET}, b.${pID}
		from (
			select rownum rn, a.* 
			from (
				select * from ${pqna} order by ${pqID} desc
				)a
			)b
			where rn between #{start} and #{end}
	</select>
	
	<select id="select_by_pqWRITER" resultType="PqnaVO">
		select * from ${pqna}
		where ${pqWRITER} like #{pqWRITER}
	</select>
	
	<select id="select_by_pqTITLE_pqCONTENT" resultType="PqnaVO">
		select * from ${pqna} 
		where ${pqTITLE} like #{keyword} or ${pqCONTENT} like #{keyword}
		order by ${pqID} desc
	</select>
	
	<update id="update_replyCOUNT">
		update ${pqna}
		set ${replyCOUNT} = ${replyCOUNT} + #{amount}
		where ${pqID} = #{pqID}
	</update>
	
</mapper>